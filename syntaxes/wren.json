{
    "name": "Wren",
    "scopeName": "source.wren",
    "fileTypes": [ "wren" ],

    "patterns": [
        { "include": "#comment" },
        { "include": "#blockComment" },
        { "include": "#keyword" },
        { "include": "#constant" },
        { "include": "#method" },
        { "include": "#foreignMethod"},
        { "include": "#class" },
        { "include": "#classBody" },
        { "include": "#variable" },
        { "include": "#string" }
    ],
    "repository": {
        "comment": {
            "name": "comment.line",
            "match": "//.*"
        },
        "blockComment": {
            "name": "comment.block",
            "begin": "/\\*",
            "end": "\\*/",
            "patterns": [ { "include": "#blockComment" } ]
        },
        "keyword": {
            "patterns": [
                {
                    "name": "keyword.control",
                    "match": "\\b(?:break|else|for|if|import|in|new|return|while|var)\\b"
                },
                {
                    "name": "keyword.operator",
                    "match": "\\b(is)\\b"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "name": "constant.language",
                    "match": "\\b(true|false|null)\\b"
                },
                {
                    "name": "variable.language",
                    "match": "\\b(this|super)\\b"
                },
                {
                    "name": "constant.numeric",
                    "match": "\\b(0x[0-9a-fA-F]*|[0-9]+(\\.?[0-9]*)?(e(\\+|-)?[0-9]+)?)\\b"
                },
                {
                    "name": "constant.numeric.hexadecimal",
                    "match": "0x[A-Fa-f0-9]+"
                }
            ]
        },
        "method": {
            "name": "meta.method",
            "begin": "(\\b(construct|static)\\s+)?(\\w+\\s*=|\\w+|\\+|-|\\*|/|%|<=?|>=?|==|!=?|&|\\||~)",
            "end": "}",
            "patterns": [
                { "include": "#comment" },
                { "include": "#blockComment" },
                { "include": "#keyword" },
                { "include": "#constant" },
                { "include": "#string" },
                { "include": "#fieldName" }
            ]
        },
        "foreignMethod": {
            "name": "meta.method",
            "begin": "(\\bforeign)\\s+(\b(construct|static)\\s+)?(\\w+\\s*=|\\w+|\\+|-|\\*|/|%|<=?|>=?|==|!=?|&|\\||~)",
            "end": "\n"
        },
        "class": {
            "name": "meta.class",
            "begin": "\\b(class)\\s+(\\w+)",
            "beginCaptures": {
                "1": { "name": "storage.modifier" },
                "2": { "name": "entity.name.type.class" }
            },
            "end": "(?=})",
            "patterns": [
                { "include": "#comment" },
                { "include": "#blockComment" },
                { "include": "method" },
                { "include": "foreignMethod" }
            ]
        },
        "fieldName": {
            "name": "variable.other",
            "match": "_[A-Za-z0-9_]+"
        },
        "variable": {
            "patterns": [
                {
                    "name": "variable.other.global",
                    "match": "\\b[A-Z]\\w"
                },
                {
                    "name": "variable.other.class",
                    "match": "\\b__\\w*"
                },
                {
                    "name": "variable.other.instance",
                    "match": "\\b_\\w*"
                }
            ]
        },
        "string": {
            "name": "string.quoted.double",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                { "include": "#stringEscapes" }
            ]
        },
        "stringEscapes": {
            "patterns": [
                {
                    "name": "constant.character.escape",
                    "match": "\\\\(?:[0\"\\abfnrtv]|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{4})"
                },
                {
                    "name": "invalid.illegal.unknown-escape",
                    "match": "\\\\(?:x[0-9A-Fa-f]{0,1}|u[0-9A-Fa-f]{0,3}|U[0-9A-Fa-f]{0,7}|.)"
                }
            ]
        }
    },
    "uuid": "fa761344-7fe1-4602-bfe3-7846848b7417"
}